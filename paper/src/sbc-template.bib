@Book{ingalls2013mathematical,
    author = {Ingalls, Brian},
    title = {Mathematical modeling in systems biology : an introduction},
    publisher = {The MIT Press},
    year = {2013},
    address = {Cambridge, MA},
isbn = {9780262018883}
 }
 
@Article{Nielsenaac7341,
    Title = {Genetic circuit design automation},
    Author = {Nielsen, Alec A. K. and Der, Bryan S. and Shin, Jonghyeon and Vaidyanathan, Prashant and Paralanov, Vanya and Strychalski, Elizabeth A. and Ross, David and Densmore, Douglas and Voigt, Christopher A.},
    Journal = {Science},
    Year = {2016},
    Number = {6281},
    Volume = {352},
    Abstract = {As synthetic biology techniques become more powerful, researchers are anticipating a future in which the design of biological circuits will be similar to the design of integrated circuits in electronics. Nielsen et al. describe what is essentially a programming language to design computational circuits in living cells. The circuits generated on plasmids expressed in Escherichia coli required careful insulation from their genetic context, but primarily functioned as specified. The circuits could, for example, regulate cellular functions in response to multiple environmental signals. Such a strategy can facilitate the development of more complex circuits by genetic engineering.Science, this issue p. 10.1126/science.aac7341INTRODUCTIONCells respond to their environment, make decisions, build structures, and coordinate tasks. Underlying these processes are computational operations performed by networks of regulatory proteins that integrate signals and control the timing of gene expression. Harnessing this capability is critical for biotechnology projects that require decision-making, control, sensing, or spatial organization. It has been shown that cells can be programmed using synthetic genetic circuits composed of regulators organized to generate a desired operation. However, the construction of even simple circuits is time-intensive and unreliable.RATIONALEElectronic design automation (EDA) was developed to aid engineers in the design of semiconductor-based electronics. In an effort to accelerate genetic circuit design, we applied principles from EDA to enable increased circuit complexity and to simplify the incorporation of synthetic gene regulation into genetic engineering projects. We used the hardware description language Verilog to enable a user to describe a circuit function. The user also specifies the sensors, actuators, and {\textquotedblleft}user constraints file{\textquotedblright} (UCF), which defines the organism, gate technology, and valid operating conditions. Cello (www.cellocad.org) uses this information to automatically design a DNA sequence encoding the desired circuit. This is done via a set of algorithms that parse the Verilog text, create the circuit diagram, assign gates, balance constraints to build the DNA, and simulate performance.RESULTSCello designs circuits by drawing upon a library of Boolean logic gates. Here, the gate technology consists of NOT/NOR logic based on repressors. Gate connection is simplified by defining the input and output signals as RNA polymerase (RNAP) fluxes. We found that the gates need to be insulated from their genetic context to function reliably in the context of different circuits. Each gate is isolated using strong terminators to block RNAP leakage, and input interchangeability is improved using ribozymes and promoter spacers. These parts are varied for each gate to avoid breakage due to recombination. Measuring the load of each gate and incorporating this into the optimization algorithms further reduces evolutionary pressure.Cello was applied to the design of 60 circuits for Escherichia coli, where the circuit function was specified using Verilog code and transformed to a DNA sequence. The DNA sequences were built as specified with no additional tuning, requiring 880,000 base pairs of DNA assembly. Of these, 45 circuits performed correctly in every output state (up to 10 regulators and 55 parts). Across all circuits, 92\% of the 412 output states functioned as predicted.CONCLUSIONOur work constitutes a hardware description language for programming living cells. This required the co-development of design algorithms with gates that are sufficiently simple and robust to be connected by automated algorithms. We demonstrate that engineering principles can be applied to identify and suppress errors that complicate the compositions of larger systems. This approach leads to highly repetitive and modular genetics, in stark contrast to the encoding of natural regulatory networks. The use of a hardware-independent language and the creation of additional UCFs will allow a single design to be transformed into DNA for different organisms, genetic endpoints, operating conditions, and gate technologies.Genetic programming using Cello.A user specifies the desired circuit function in Verilog code, and this is transformed into a DNA sequence. An example circuit is shown (0xF6); red and blue curves are predicted output states for populations of cells, and solid black distributions are experimental flow cytometry data. The outputs are shown for all combinations of sensor states; plus and minus signs indicate the presence or absence of input signal. RBS, ribosome binding site; RPU, relative promoter unit; YFP, yellow fluorescent protein.Computation can be performed in living cells by DNA-encoded circuits that process sensory information and control biological functions. Their construction is time-intensive, requiring manual part assembly and balancing of regulator expression. We describe a design environment, Cello, in which a user writes Verilog code that is automatically transformed into a DNA sequence. Algorithms build a circuit diagram, assign and connect gates, and simulate performance. Reliable circuit design requires the insulation of gates from genetic context, so that they function identically when used in different circuits. We used Cello to design 60 circuits for Escherichia coli (880,000 base pairs of DNA), for which each DNA sequence was built as predicted by the software with no additional tuning. Of these, 45 circuits performed correctly in every output state (up to 10 regulators and 55 parts), and across all circuits 92\% of the output states functioned as predicted. Design automation simplifies the incorporation of genetic circuits into biotechnology projects that require decision-making, control, sensing, or spatial organization.},
    DOI = {10.1126/science.aac7341},
    Eprint = {http://science.sciencemag.org/content/352/6281/aac7341.full.pdf},
    ISSN = {0036-8075},
    Publisher = {American Association for the Advancement of Science},
    URL = {http://science.sciencemag.org/content/352/6281/aac7341}
}

@Article{vaidyanathanframework,
    Title = {A Framework for Genetic Logic Synthesis},
    Author = {Vaidyanathan, P. and Der, B.S. and Bhatia, S. and Roehner, N. and Silva, R. and Voigt, C.A. and Densmore, D.},
    Journal = {Proceedings of the IEEE},
    Year = {2015},
    Number = {11},
    Pages = {2196-2207},
    Volume = {103},
    DOI = {10.1109/JPROC.2015.2443832},
    ISSN = {0018-9219},
    Keywords = {Crosstalk;DNA;Encoding;Logic gates;Proteins;RNA;Boolean;digital;genetic;logic;synthesis;synthetic biology;transcription}
}

@article{Hucka2003,
  doi = {10.1093/bioinformatics/btg015},
  url = {https://doi.org/10.1093/bioinformatics/btg015},
  year = {2003},
  month = mar,
  publisher = {Oxford University Press ({OUP})},
  volume = {19},
  number = {4},
  pages = {524--531},
  author = {M. Hucka and A. Finney and H. M. Sauro and H. Bolouri and J. C. Doyle and H. Kitano and  and the rest of the SBML Forum: and A. P. Arkin and B. J. Bornstein and D. Bray and A. Cornish-Bowden and A. A. Cuellar and S. Dronov and E. D. Gilles and M. Ginkel and V. Gor and I. I. Goryanin and W. J. Hedley and T. C. Hodgman and J.-H. Hofmeyr and P. J. Hunter and N. S. Juty and J. L. Kasberger and A. Kremling and U. Kummer and N. Le Novere and L. M. Loew and D. Lucio and P. Mendes and E. Minch and E. D. Mjolsness and Y. Nakayama and M. R. Nelson and P. F. Nielsen and T. Sakurada and J. C. Schaff and B. E. Shapiro and T. S. Shimizu and H. D. Spence and J. Stelling and K. Takahashi and M. Tomita and J. Wagner and J. Wang},
  title = {The systems biology markup language ({SBML}): a medium for representation and exchange of biochemical network models},
  journal = {Bioinformatics}
}

@article{Hucka2007,
  doi = {10.1038/npre.2007.21.1},
  url = {https://doi.org/10.1038/npre.2007.21.1},
  year = {2007},
  month = jan,
  publisher = {Springer Science and Business Media {LLC}},
  author = {Michael Hucka},
  title = {The Systems Biology Markup Language ({SBML}): Where It{\textquotesingle}s Been and Where It{\textquotesingle}s Going},
  journal = {Nature Precedings}
}

@article{Bornstein2008,
  doi = {10.1093/bioinformatics/btn051},
  url = {https://doi.org/10.1093/bioinformatics/btn051},
  year = {2008},
  month = feb,
  publisher = {Oxford University Press ({OUP})},
  volume = {24},
  number = {6},
  pages = {880--881},
  author = {B. J. Bornstein and S. M. Keating and A. Jouraku and M. Hucka},
  title = {{LibSBML}: an {API} Library for {SBML}},
  journal = {Bioinformatics}
}
@article{Jang2012,
  doi = {10.1021/sb300034m},
  url = {https://doi.org/10.1021/sb300034m},
  year = {2012},
  month = jul,
  publisher = {American Chemical Society ({ACS})},
  volume = {1},
  number = {8},
  pages = {365--374},
  author = {Seunghee S. Jang and Kevin T. Oishi and Robert G. Egbert and Eric Klavins},
  title = {Specification and Simulation of Synthetic Multicelled Behaviors},
  journal = {{ACS} Synthetic Biology}
}

@article{LeNovere2006,
  doi = {10.1093/nar/gkj092},
  url = {https://doi.org/10.1093/nar/gkj092},
  year = {2006},
  month = jan,
  publisher = {Oxford University Press ({OUP})},
  volume = {34},
  number = {90001},
  pages = {D689--D691},
  author = {N. Le Novere},
  title = {{BioModels} Database: a free,  centralized database of curated,  published,  quantitative kinetic models of biochemical and cellular systems},
  journal = {Nucleic Acids Research}
}

@article{Gutirrez2017,
  doi = {10.1021/acssynbio.7b00003},
  url = {https://doi.org/10.1021/acssynbio.7b00003},
  year = {2017},
  month = may,
  publisher = {American Chemical Society ({ACS})},
  volume = {6},
  number = {8},
  pages = {1496--1508},
  author = {Mart{\'{\i}}n Guti{\'{e}}rrez and Paula Gregorio-Godoy and Guillermo P{\'{e}}rez del Pulgar and Luis E. Mu{\~{n}}oz and Sandra S{\'{a}}ez and Alfonso Rodr{\'{\i}}guez-Pat{\'{o}}n},
  title = {A New Improved and Extended Version of the Multicell Bacterial Simulatorgro},
  journal = {{ACS} Synthetic Biology}
}

@article{Macklin2019,
  doi = {10.1093/gigascience/giz127},
  url = {https://doi.org/10.1093/gigascience/giz127},
  year = {2019},
  month = oct,
  publisher = {Oxford University Press ({OUP})},
  volume = {8},
  number = {10},
  author = {Paul Macklin},
  title = {Key challenges facing data-driven multicellular systems biology},
  journal = {{GigaScience}}
}

@article{Hoops2006,
  doi = {10.1093/bioinformatics/btl485},
  url = {https://doi.org/10.1093/bioinformatics/btl485},
  year = {2006},
  month = oct,
  publisher = {Oxford University Press ({OUP})},
  volume = {22},
  number = {24},
  pages = {3067--3074},
  author = {S. Hoops and S. Sahle and R. Gauges and C. Lee and J. Pahle and N. Simus and M. Singhal and L. Xu and P. Mendes and U. Kummer},
  title = {{COPASI}--a {COmplex} {PAthway} {SImulator}},
  journal = {Bioinformatics}
}

@article{Smith2009,
  doi = {10.1093/bioinformatics/btp401},
  url = {https://doi.org/10.1093/bioinformatics/btp401},
  year = {2009},
  month = jul,
  publisher = {Oxford University Press ({OUP})},
  volume = {25},
  number = {18},
  pages = {2452--2454},
  author = {L. P. Smith and F. T. Bergmann and D. Chandran and H. M. Sauro},
  title = {Antimony: a modular model definition language},
  journal = {Bioinformatics}
}

@article{Choi2018,
  doi = {10.1016/j.biosystems.2018.07.006},
  url = {https://doi.org/10.1016/j.biosystems.2018.07.006},
  year = {2018},
  month = sep,
  publisher = {Elsevier {BV}},
  volume = {171},
  pages = {74--79},
  author = {Kiri Choi and J. Kyle Medley and Matthias K\"{o}nig and Kaylene Stocking and Lucian Smith and Stanley Gu and Herbert M. Sauro},
  title = {Tellurium: An extensible python-based modeling environment for systems and synthetic biology},
  journal = {Biosystems}
}
